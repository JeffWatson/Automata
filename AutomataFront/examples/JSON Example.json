{   "label" : "(A*BA*B)*",
	"minDFA" : {"states" : [
		{ "state" : "q0",
		   "adj" : [{"to" : "q0", "on" : "A"},
		   			{"to" : "q0", "on" : "B"}]
		},
		{ "state" : "q1",
		   "adj" : [{"to" : "q2", "on" : "A"},
		   			{"to" : "q3", "on" : "B"}]
		},
		{ "state" : "q2",
		   "adj" : [{"to" : "q2", "on" : "A"},
		   			{"to" : "q3", "on" : "B"}]
		},
		{ "state" : "q3",
		   "adj" : [{"to" : "q4", "on" : "A"},
		   			{"to" : "q5", "on" : "B"}]
		},
		{ "state" : "q4",
		   "adj" : [{"to" : "q4", "on" : "A"},
		   			{"to" : "q5", "on" : "B"}]
		},
        { "state" : "q5",
            "adj" : [{"to" : "q2", "on" : "A"},
                     {"to" : "q3", "on" : "B"}]
        }
	],
	"initial" : "q1",
	"accepting" : ["q1","q5"]}	
}

// I don't know if this is correct. It's based on the example on Sweany's website.
// This is what the back end should spit out after putting in a regex.
// This will be converted to TeX, then a pdf, and then displayed on the webpage.